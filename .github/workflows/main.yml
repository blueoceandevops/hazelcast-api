# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: ReportGenerator
        # You may pin to the exact commit or the version.
        # uses: danielpalme/ReportGenerator-GitHub-Action@4728592d41aac366e660b9bac16e16144ab458e4
        uses: danielpalme/ReportGenerator-GitHub-Action@4.7.1
        with:
          # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          reports: jacocoTestReport.xml 
          # The directory where the generated report should be saved.
          targetdir: build/reports/jacoco/test/
          # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
          reporttypes: xml
          # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
          sourcedirs: src/
          # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
          #historydir: # optional, default is 
          # Optional plugin files for custom reports or custom history storage (separated by semicolon).
          #plugins: # optional, default is 
          # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          #assemblyfilters: # optional, default is +*
          # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          #classfilters: # optional, default is +*
          # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          #filefilters: # optional, default is +*
          # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          #verbosity: # optional, default is Info
          # Optional tag or build version.
          #tag: # optional, default is ${{ github.run_number }}_${{ github.run_id }}
          # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings
          #customSettings: # optional, default is 

      - name: Codacy Coverage Reporter
        # You may pin to the exact commit or the version.
        # uses: codacy/codacy-coverage-reporter-action@53ebfe140c89720a8234b8ea4fabaf6de5736092
        uses: codacy/codacy-coverage-reporter-action@0.2.0
        with:
          # Project token for the Codacy project you want to send coverage information
          project-token: ${{secrets.CODACY_PROJECT_TOKEN}}
          # Optional comma separated list of coverage reports to send to Codacy
          #coverage-reports: # optional, default is 
